@model RWS.Models.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create Product</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.ProductCode, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductCode)
                @Html.ValidationMessageFor(model => model.ProductCode)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductDesc, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductDesc)
                @Html.ValidationMessageFor(model => model.ProductDesc)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SupplierId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SupplierId)
                @Html.ValidationMessageFor(model => model.SupplierId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PurchasePrice, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PurchasePrice)
                @Html.ValidationMessageFor(model => model.PurchasePrice)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SellingPrice, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SellingPrice)
                @Html.ValidationMessageFor(model => model.SellingPrice)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Margin, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Margin)
                @Html.ValidationMessageFor(model => model.Margin)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MinimumQty, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MinimumQty)
                @Html.ValidationMessageFor(model => model.MinimumQty)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UomId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UomId)
                @Html.ValidationMessageFor(model => model.UomId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DisplayOrder, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DisplayOrder)
                @Html.ValidationMessageFor(model => model.DisplayOrder)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductType, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductType)
                @Html.ValidationMessageFor(model => model.ProductType)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AllowSales, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AllowSales)
                @Html.ValidationMessageFor(model => model.AllowSales)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive)
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.CreatedUser, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedUser)
                @Html.ValidationMessageFor(model => model.CreatedUser)
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.SupplierCode, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SupplierCode)
                @Html.ValidationMessageFor(model => model.SupplierCode)
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.SupplierName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SupplierName)
                @Html.ValidationMessageFor(model => model.SupplierName)
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.UnitSize, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UnitSize)
                @Html.ValidationMessageFor(model => model.UnitSize)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
